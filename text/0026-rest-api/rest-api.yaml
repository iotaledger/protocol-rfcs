openapi: 3.0.3
info:
  title: IOTA REST API
  description: This document describes the upcoming REST API for Hornet and Bee.
  contact:
    email: contact@iota.org
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
externalDocs:
  description: Find out more about IOTA
  url: 'https://iota.org'
servers:
  - url: 'http://127.0.0.1:14265'
tags:
  - name: node
    description: Everything about the node itself.
  - name: tangle
    description: Everything about the tangle itself.
  - name: messages
    description: Everything about messages.
  - name: UTXO
    description: Everything about UTXOs.
  - name: milestones
    description: Everything about milestones.
  - name: peers
    description: Everything about the peers of the node.
paths:
  /health:
    get:
      tags:
        - node
      summary: Returns the health of the node.
      description: >-
        Returns the health of the node, which can be useful for load-balancing
        or uptime monitoring.
      responses:
        '200':
          description: node is healthy
        '503':
          description: node is not healthy
  /api/v1/info:
    get:
      tags:
        - node
      summary: Returns general information about the node.
      description: Returns general information about the node.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInfoResponse'
              examples:
                default:
                  $ref: '#/components/examples/get-info-response-example'
  /api/v1/tips:
    get:
      tags:
        - tangle
      summary: Returns two non-lazy tips.
      description: >-
        Returns two non-lazy tips. If the node can only provide a single tip,
        `tip1MessageId` and `tip2MessageId` are identical.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTipsResponse'
              examples:
                Different tips:
                  $ref: '#/components/examples/get-tips-response-example-different'
                Identical tips:
                  $ref: '#/components/examples/get-tips-response-example-identical'
        '503':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
  /api/v1/messages:
    post:
      tags:
        - messages
      summary: Submit a message.
      description: >-
        Submit a message. The node takes care of missing fields and tries to
        build the message. On success, the message will be stored in the Tangle.
        This endpoint will return the identifier of the message.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMessagesRequest'
            examples:
              Full message with Indexation Payload:
                $ref: >-
                  #/components/examples/post-indexation-message-request-example-full
              Minimal Message with Indexation Payload:
                $ref: >-
                  #/components/examples/post-indexation-message-request-example-minimal
              Full message with Transaction Payload:
                $ref: >-
                  #/components/examples/post-transaction-message-request-example-full
              Minimal Message with Transaction Payload:
                $ref: >-
                  #/components/examples/post-transaction-message-request-example-minimal
          application/octet-steam:
            schema:
              type: string
              format: binary
              description: message in raw binary format
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMessagesResponse'
              examples:
                default:
                  $ref: '#/components/examples/post-messages-response-example'
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
    get:
      tags:
        - messages
      summary: Filter messages by a matching criteria.
      description: Search for messages matching the criteria.
      parameters:
        - in: query
          name: index
          schema:
            type: string
          example: someindexkey
          required: true
          description: Indexation key of the message.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessagesByIndexResponse'
              examples:
                default:
                  $ref: '#/components/examples/get-messages-by-index-response-example'
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
  '/api/v1/messages/{messageId}':
    get:
      tags:
        - messages
      summary: Returns message data as JSON by its identifier.
      description: >-
        Find a message by its identifer. This endpoint returns the given message
        as JSON.
      parameters:
        - in: path
          name: messageId
          schema:
            type: string
          example: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
          required: true
          description: Identifier of the message.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessageByIdDataResponse'
              examples:
                Empty Payload:
                  $ref: >-
                    #/components/examples/get-message-by-id-empty-response-example
                Transaction Payload:
                  $ref: >-
                    #/components/examples/get-message-by-id-transaction-response-example
                Milestone Payload:
                  $ref: >-
                    #/components/examples/get-message-by-id-milestone-response-example
                Indexation Payload:
                  $ref: >-
                    #/components/examples/get-message-by-id-indexation-response-example
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '404':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
  '/api/v1/messages/{messageId}/metadata':
    get:
      tags:
        - messages
      summary: Returns message metadata by its identifier.
      description: >-
        Find a message by its identifer. This endpoint returns the given message
        metadata.
      parameters:
        - in: path
          name: messageId
          schema:
            type: string
          example: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
          required: true
          description: Identifier of the message.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessageMetadataByIdResponse'
              examples:
                New Message:
                  $ref: '#/components/examples/get-message-by-id-response-example-new'
                Solid:
                  $ref: >-
                    #/components/examples/get-message-by-id-response-example-solid
                Included:
                  $ref: >-
                    #/components/examples/get-message-by-id-response-example-included
                Conflicting:
                  $ref: >-
                    #/components/examples/get-message-by-id-response-example-conflicting
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '404':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
  '/api/v1/messages/{messageId}/raw':
    get:
      tags:
        - messages
      summary: Returns message raw bytes by its identifier.
      description: >-
        Find a message by its identifer. This endpoint returns the given message
        raw data.
      parameters:
        - in: path
          name: messageId
          schema:
            type: string
          example: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
          required: true
          description: Identifier of the message.
      responses:
        '200':
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
              example: >-
                0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eb000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000020000016920b176f613ec7be59e68fc68f597eb3393af80f74c7c3db78198147d5f1f92640000000000000000018afe1f314622cc1ef52f16d619d1baccff81816b7e4e35fe268dc247b730acd65d5d2dd3f7df09000000000001000001f7868ab6bb55800b77b8b74191ad8285a9bf428ace579d541fda47661803ff44e0af5c34ad4edf475a01fb46e089a7afcab158b4a0133f32e889083e1c77eef65548933e0c6d2c3b0ac006cd77e77d778bf37b8d38d219fb62a9a2f718d4c9095100000000000000
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '404':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
  '/api/v1/messages/{messageId}/children':
    get:
      tags:
        - messages
      summary: Returns the list of messages that reference a message by its identifier.
      description: >-
        Find a message by its identifer. This endpoint returns the given message
        including payload.
      parameters:
        - in: path
          name: messageId
          schema:
            type: string
          example: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
          required: true
          description: Identifier of the message.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessageChildrenResponse'
              examples:
                Children:
                  $ref: >-
                    #/components/examples/get-messages-by-id-response-example-children
                No Children:
                  $ref: >-
                    #/components/examples/get-messages-by-id-response-example-nochildren
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
  '/api/v1/outputs/{outputId}':
    get:
      tags:
        - UTXO
      summary: Find an output by its identifier.
      description: Find an output by its identifier.
      parameters:
        - in: path
          name: outputId
          schema:
            type: string
          required: true
          description: >-
            Identifier of the output. An output is identified by the
            concatenation of `transaction_id+output_index`.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOutputsByIdResponse'
              examples:
                default:
                  $ref: '#/components/examples/get-outputs-by-id-response-example'
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '404':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
  '/api/v1/addresses/{address}':
    get:
      tags:
        - UTXO
      summary: Get the balance of a bech32-encoded address.
      description: >-
        Get the balance of a bech32-encoded address. If `count` equals
        `maxResults`, then there might be more outputs available but those were
        skipped from the balance calculation for performance reasons. The user
        should sweep the address to reduce the amount of outputs and get the
        correct balance.
      parameters:
        - in: path
          name: address
          schema:
            type: string
          example: iot1qx82lpavrafwkp0jclqvz4gzm7vs5g5g8rwr00gcm62s8456l5jh6aw0td8
          required: true
          description: bech32 encoded address
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAddressBalanceResponse'
              examples:
                Default:
                  $ref: >-
                    #/components/examples/get-address-balance-bech32-response-example
                Max Results:
                  $ref: >-
                    #/components/examples/get-address-balance-bech32-response-example-maxResults
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
  '/api/v1/addresses/ed25519/{address}':
    get:
      tags:
        - UTXO
      summary: Get the balance of a hex-encoded Ed25519 address.
      description: >-
        Get the balance of a hex-encoded Ed25519 address. If `count` equals
        `maxResults`, then there might be more outputs available but those were
        skipped from the balance calculation for performance reasons. The user
        should sweep the address to reduce the amount of outputs and get the
        correct balance.
      parameters:
        - in: path
          name: address
          schema:
            type: string
          example: 8eaf87ac1f52eb05f2c7c0c15502df990a228838dc37bd18de9503d69afd257d
          required: true
          description: hex-encoded Ed25519 address
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAddressBalanceResponse'
              examples:
                Default:
                  $ref: >-
                    #/components/examples/get-address-balance-ed25519-response-example
                Max Results:
                  $ref: >-
                    #/components/examples/get-address-balance-ed25519-response-example-maxResults
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
  '/api/v1/addresses/{address}/outputs':
    get:
      tags:
        - UTXO
      summary: Get all outputs that use a given bech32-encoded address.
      description: >-
        Get all outputs that use a given bech32-encoded address. If count equals
        maxResults, then there might be more outputs available but those were
        skipped for performance reasons. User should sweep the address to reduce
        the amount of outputs.
      parameters:
        - in: path
          name: address
          schema:
            type: string
          example: iot1qx82lpavrafwkp0jclqvz4gzm7vs5g5g8rwr00gcm62s8456l5jh6aw0td8
          required: true
          description: bech32-encoded address that is referenced by the outputs.
        - in: query
          name: include-spent
          schema:
            type: boolean
          example: true
          required: false
          description: >-
            Set to true to also include the known spent outputs for the given
            address.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAddressOutputsResponse'
              examples:
                default:
                  $ref: '#/components/examples/get-address-outputs-response-example'
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
  '/api/v1/addresses/ed25519/{address}/outputs':
    get:
      tags:
        - UTXO
      summary: Get all outputs that use a given hex-encoded Ed25519 address.
      description: >-
        Get all outputs that use a given hex-encoded Ed25519 address. If count
        equals maxResults, then there might be more outputs available but those
        were skipped for performance reasons. User should sweep the address to
        reduce the amount of outputs.
      parameters:
        - in: path
          name: address
          schema:
            type: string
          example: 8eaf87ac1f52eb05f2c7c0c15502df990a228838dc37bd18de9503d69afd257d
          required: true
          description: hex-encoded Ed25519 address that is referenced by the outputs.
        - in: query
          name: include-spent
          schema:
            type: boolean
          example: true
          required: false
          description: >-
            Set to true to also include the known spent outputs for the given
            address.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAddressOutputsResponse'
              examples:
                default:
                  $ref: '#/components/examples/get-address-outputs-response-example'
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
  '/api/v1/milestones/{index}':
    get:
      tags:
        - milestones
      summary: Get the milestone by the given index.
      description: Get the milestone by the given index.
      parameters:
        - in: path
          name: index
          schema:
            type: number
          example: 154862
          required: true
          description: Index of the milestone.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMilestoneByIndexResponse'
              examples:
                default:
                  $ref: >-
                    #/components/examples/get-milestone-by-index-response-example
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '404':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
  /api/v1/peers:
    get:
      tags:
        - peers
      summary: Get information about all peers of the node.
      description: Get information about all peers of the node.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPeersResponse'
              examples:
                default:
                  $ref: '#/components/examples/get-peers-response-example'
    post:
      tags:
        - peers
      summary: Add a peer to the node.
      description: 'Add a peer to the node. '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPeerRequest'
            examples:
              default:
                $ref: '#/components/examples/post-peer-request-example'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostPeerResponse'
              examples:
                default:
                  $ref: '#/components/examples/post-peer-response-example'
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
  '/api/v1/peers/{peerId}':
    get:
      tags:
        - peers
      summary: Get information about a specific peer.
      description: Get information about a specific peer.
      parameters:
        - in: path
          name: peerId
          schema:
            type: string
          example: 12D327oXYZDcJqxnWqCLSgeQKqNStwFUqHSJXPdSYTJnfxQESzie
          required: true
          description: Identifier of the message.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPeerResponse'
              examples:
                default:
                  $ref: '#/components/examples/get-peer-response-example'
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '404':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
    delete:
      tags:
        - peers
      summary: Remove a specific peer.
      description: Remove a specific peer.
      parameters:
        - in: path
          name: peerId
          schema:
            type: string
          example: 12D327oXYZDcJqxnWqCLSgeQKqNStwFUqHSJXPdSYTJnfxQESzie
          required: true
          description: Identifier of the message.
      responses:
        '200':
          description: peer sucessfully removed
        '400':
          description: invalid request
        '404':
          description: peer not found
components:
  examples:
    get-info-response-example:
      value:
        data:
          name: HORNET
          version: 0.5.3
          isHealthy: true
          networkId: alphanet1
          latestMilestoneIndex: 25211
          solidMilestoneIndex: 25211
          pruningIndex: 0
          features:
            - PoW
          minPowScore: 4000
    get-tips-response-example-different:
      value:
        data:
          tip1MessageId: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
          tip2MessageId: 78d546b46aec4557872139a48f66bc567687e8413578a14323548732358914a2
    get-tips-response-example-identical:
      value:
        data:
          tip1MessageId: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
          tip2MessageId: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
    post-messages-response-example:
      value:
        data:
          messageId: a4dd36465af63d495d35a05f592d42a51511c153e1bae8fad00453c8cbb48727
    get-messages-by-index-response-example:
      value:
        data:
          index: someindexkey
          maxResults: 1000
          count: 2
          messageIds:
            - f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
            - 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006
    get-message-by-id-response-example-new:
      value:
        data:
          messageId: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
          parent1MessageId: 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006
          parent2MessageId: d97e89e49ed263b763afeda192515fe154ec826ceb92ef08926cd68ec02c9510
          isSolid: false
          shouldPromote: true
          shouldReattach: false
    get-message-by-id-response-example-solid:
      value:
        data:
          messageId: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
          parent1MessageId: 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006
          parent2MessageId: d97e89e49ed263b763afeda192515fe154ec826ceb92ef08926cd68ec02c9510
          isSolid: true
          shouldPromote: false
          shouldReattach: false
    get-message-by-id-response-example-included:
      value:
        data:
          messageId: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
          parent1MessageId: 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006
          parent2MessageId: d97e89e49ed263b763afeda192515fe154ec826ceb92ef08926cd68ec02c9510
          isSolid: true
          referencedByMilestoneIndex: 15465
          ledgerInclusionState: included
    get-message-by-id-response-example-conflicting:
      value:
        data:
          messageId: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
          parent1MessageId: 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006
          parent2MessageId: d97e89e49ed263b763afeda192515fe154ec826ceb92ef08926cd68ec02c9510
          isSolid: true
          referencedByMilestoneIndex: 15465
          ledgerInclusionState: conflicting
    post-indexation-message-request-example-full:
      value:
        networkId: '6530425480034647824'
        parent1MessageId: 0b80adc0ca06b21842ac50d32e8132cf369d5e6a556e8454fdc846fd821d0fa2
        parent2MessageId: 32105f6889424d264774ce7d086ffd3629719b909f64737708c6a9e719389072
        payload:
          type: 2
          index: HORNET Spammer
          data: >-
            42696e61727920697320746865206675747572652e0a436f756e743a203132313437320a54696d657374616d703a20323032302d31312d32325431323a34303a34325a0a54697073656c656374696f6e3a203333c2b573
        nonce: '2695978'
    post-indexation-message-request-example-minimal:
      value:
        payload:
          type: 2
          index: HORNET Spammer
          data: >-
            42696e61727920697320746865206675747572652e0a436f756e743a203132313437320a54696d657374616d703a20323032302d31312d32325431323a34303a34325a0a54697073656c656374696f6e3a203333c2b573
    post-transaction-message-request-example-minimal:
      value:
        payload:
          type: 0
          essence:
            type: 0
            inputs:
              - type: 0
                transactionId: >-
                  704c198e9990587d89a6019d5346ffa1a36514fcf9cbf4bf21ed9dd6f887b8d0
                transactionOutputIndex: 0
            outputs:
              - type: 0
                address:
                  type: 1
                  address: >-
                    06588cfd44f4b75e071b6088a69476558b42a49b2a29a31106b877092038f582
                amount: 999999999000
              - type: 0
                address:
                  type: 1
                  address: >-
                    5fd30153be7f41046732400ffb47f81a15b748a077e43affa9a580ebbdfc5e1b
                amount: 1000
            payload: null
          unlockBlocks:
            - type: 0
              signature:
                type: 1
                publicKey: >-
                  34a21d261bdc8b50518da5e8b687069f7ea8d81bc15872011b4fa13b44b954e9
                signature: >-
                  b39c4f7102f2219ac9ff148ef977ca278863e9c3a7f26469b08499a26e81beb314c76ce4b9ea690be2d9c243b6cb60196802973660ed46400b1f783c4c57540e
    post-transaction-message-request-example-full:
      value:
        networkId: '6530425480034647824'
        parent1MessageId: 56d181a75f95c5106e6da9a2a44da43266c59d9c3ba51eb8798145d54d43498b
        parent2MessageId: a65bcd62adfedb571be1738f2c52bd539c0295347210f02c16dc39ec22e54f85
        payload:
          type: 0
          essence:
            type: 0
            inputs:
              - type: 0
                transactionId: >-
                  704c198e9990587d89a6019d5346ffa1a36514fcf9cbf4bf21ed9dd6f887b8d0
                transactionOutputIndex: 0
            outputs:
              - type: 0
                address:
                  type: 1
                  address: >-
                    06588cfd44f4b75e071b6088a69476558b42a49b2a29a31106b877092038f582
                amount: 999999999000
              - type: 0
                address:
                  type: 1
                  address: >-
                    5fd30153be7f41046732400ffb47f81a15b748a077e43affa9a580ebbdfc5e1b
                amount: 1000
            payload: null
          unlockBlocks:
            - type: 0
              signature:
                type: 1
                publicKey: >-
                  34a21d261bdc8b50518da5e8b687069f7ea8d81bc15872011b4fa13b44b954e9
                signature: >-
                  b39c4f7102f2219ac9ff148ef977ca278863e9c3a7f26469b08499a26e81beb314c76ce4b9ea690be2d9c243b6cb60196802973660ed46400b1f783c4c57540e
        nonce: '1398515'
    get-message-by-id-empty-response-example:
      value:
        data:
          networkId: '6530425480034647824'
          parent1MessageId: c0b728d4c292860b57747c7bfbd989ccc40be8c76229022644c05e1352bf1ea3
          parent2MessageId: e8db39681478cf9826bd2f31d045f16f5e1f478c5abc3030419da7911df9e288
          payload: null
          nonce: '1481'
    get-message-by-id-transaction-response-example:
      value:
        data:
          networkId: '6530425480034647824'
          parent1MessageId: 56d181a75f95c5106e6da9a2a44da43266c59d9c3ba51eb8798145d54d43498b
          parent2MessageId: a65bcd62adfedb571be1738f2c52bd539c0295347210f02c16dc39ec22e54f85
          payload:
            type: 0
            essence:
              type: 0
              inputs:
                - type: 0
                  transactionId: >-
                    704c198e9990587d89a6019d5346ffa1a36514fcf9cbf4bf21ed9dd6f887b8d0
                  transactionOutputIndex: 0
              outputs:
                - type: 0
                  address:
                    type: 1
                    address: >-
                      06588cfd44f4b75e071b6088a69476558b42a49b2a29a31106b877092038f582
                  amount: 999999999000
                - type: 0
                  address:
                    type: 1
                    address: >-
                      5fd30153be7f41046732400ffb47f81a15b748a077e43affa9a580ebbdfc5e1b
                  amount: 1000
              payload: null
            unlockBlocks:
              - type: 0
                signature:
                  type: 1
                  publicKey: >-
                    34a21d261bdc8b50518da5e8b687069f7ea8d81bc15872011b4fa13b44b954e9
                  signature: >-
                    b39c4f7102f2219ac9ff148ef977ca278863e9c3a7f26469b08499a26e81beb314c76ce4b9ea690be2d9c243b6cb60196802973660ed46400b1f783c4c57540e
          nonce: '1398515'
    get-message-by-id-milestone-response-example:
      value:
        data:
          networkId: '6530425480034647824'
          parent1MessageId: 363234351b3fce9283e730ebd72dc51246b260f2e4d50f64a003f4ad28c88e57
          parent2MessageId: ad565d4733347b22cc7229691e388a1d4e4af4a7d5ed3295bfbc904939c4d5ba
          payload:
            type: 1
            index: 20239
            timestamp: 1607468606
            parent1MessageId: 363234351b3fce9283e730ebd72dc51246b260f2e4d50f64a003f4ad28c88e57
            parent2MessageId: ad565d4733347b22cc7229691e388a1d4e4af4a7d5ed3295bfbc904939c4d5ba
            inclusionMerkleProof: 0e5751c026e543b2e8ab2eb06099daa1d1e5df47778f7787faab45cdf12fe3a8
            publicKeys:
              - 7205c145525cee64f1c9363696811d239919d830ad964b4e29359e6475848f5a
              - e468e82df33d10dea3bd0eadcd7867946a674d207c39f5af4cc44365d268a7e6
            signatures:
              - >-
                f5a48946b8fca18fb2e96aec6e5da618a3dda6aaa543821726676dbc675081b0038566548913cb7dc87dbce506bcbd345b7836a5a1f727b8ce53a22f3cbdc609
              - >-
                27738e6b61a987a25a510f00a649d4cbec8a580af4ca1de93e6938dbf0a2aa2fc90b350e29593421cda88110e63e8e02068678b88e25c0bed44b0ff8c95e7606
          nonce: '1666062'
    get-message-by-id-indexation-response-example:
      value:
        data:
          networkId: '6530425480034647824'
          parent1MessageId: 0b80adc0ca06b21842ac50d32e8132cf369d5e6a556e8454fdc846fd821d0fa2
          parent2MessageId: 32105f6889424d264774ce7d086ffd3629719b909f64737708c6a9e719389072
          payload:
            type: 2
            index: HORNET Spammer
            data: >-
              42696e61727920697320746865206675747572652e0a436f756e743a203132313437320a54696d657374616d703a20323032302d31312d32325431323a34303a34325a0a54697073656c656374696f6e3a203333c2b573
          nonce: '2695978'
    get-messages-by-id-response-example-children:
      value:
        data:
          messageId: ed3c3f1a319ff4e909cf2771d79fece0ac9bd9fd2ee49ea6c0885c9cb3b1248c
          maxResults: 1000
          count: 3
          childrenMessageIds:
            - 1c6943b0487c92fd057d4d22ad844cc37ee27fe6fbe88e5ff0d20b2233f75b9d
            - ed3c3f1a319ff4e909cf2771d79fece0ac9bd9fd2ee49ea6c0885c9cb3b1248c
            - 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006
    get-messages-by-id-response-example-nochildren:
      value:
        data:
          messageId: ed3c3f1a319ff4e909cf2771d79fece0ac9bd9fd2ee49ea6c0885c9cb3b1248c
          maxResults: 1000
          count: 0
          childrenMessageIds: []
    get-outputs-by-id-response-example:
      value:
        data:
          messageId: 9cd745ef6800c8e8c80b09174ee4b250b3c43dfa62d7c6a4e61f848febf731a0
          transactionId: 1ee46e19f4219ee65afc10227d0ca22753f76ef32d1e922e5cbe3fbc9b5a5298
          outputIndex: 1
          isSpent: false
          output:
            type: 0
            address:
              type: 1
              address: 8eaf87ac1f52eb05f2c7c0c15502df990a228838dc37bd18de9503d69afd257d
            amount: 1000
    get-address-balance-bech32-response-example:
      value:
        data:
          addressType: 1
          address: 8eaf87ac1f52eb05f2c7c0c15502df990a228838dc37bd18de9503d69afd257d
          maxResults: 1000
          count: 25
          balance: 1338263
    get-address-balance-bech32-response-example-maxResults:
      value:
        data:
          addressType: 1
          address: 53908a8e2cd91a52895d9adfa2ebec9204bfff78a1f8b0ebc2ef09f973108959
          maxResults: 1000
          count: 1000
          balance: 112848192
    get-address-balance-ed25519-response-example:
      value:
        data:
          addressType: 1
          address: 8eaf87ac1f52eb05f2c7c0c15502df990a228838dc37bd18de9503d69afd257d
          maxResults: 1000
          count: 25
          balance: 1338263
    get-address-balance-ed25519-response-example-maxResults:
      value:
        data:
          addressType: 1
          address: 53908a8e2cd91a52895d9adfa2ebec9204bfff78a1f8b0ebc2ef09f973108959
          maxResults: 1000
          count: 1000
          balance: 112848192
    get-address-outputs-response-example:
      value:
        data:
          addressType: 1
          address: 8eaf87ac1f52eb05f2c7c0c15502df990a228838dc37bd18de9503d69afd257d
          maxResults: 1000
          count: 4
          outputIds:
            - >-
              1ee46e19f4219ee65afc10227d0ca22753f76ef32d1e922e5cbe3fbc9b5a52980100
            - >-
              3d36ec4afb2d634b9313f84606b98b69675a3ef6f44dcdecb18c30945b57221e0100
            - >-
              ee3447d088e3e2c53c5b3e56a38fdc859ca2c4b4161cf256c0462ce4d34731820100
            - >-
              f8bdbfb0f57ade7fbb95d31b11e2dbda9b2a35e9dc0cd3e11cb324e8a6bedc260100
    get-milestone-by-index-response-example:
      value:
        data:
          milestoneIndex: 15465
          messageId: 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006
          timestamp: 1602227215
    get-peers-response-example:
      value:
        data:
          - id: 12D327oXYZDcJqxnWqCLSgeQKqNStwFUqHSJXPdSYTJnfxQESzie
            multiAddresses:
              - /dns/abc.com/tcp/15602
            relation: known
            connected: true
            gossipMetrics:
              sentPackets: 0
              droppedSentPackets: 0
              receivedHeartbeats: 0
              sentHeartbeats: 0
              receivedMessages: 0
              newMessages: 0
              knownMessages: 0
          - id: 12F4AooXYZDcJqxnWqCLSgeQKqNStwFUqHSJXPdSYTJnfxQESzie
            multiAddresses:
              - /dns/xyz.io/tcp/15600
            relation: known
            connected: true
            gossipMetrics:
              sentPackets: 0
              droppedSentPackets: 0
              receivedHeartbeats: 0
              sentHeartbeats: 0
              receivedMessages: 0
              newMessages: 0
              knownMessages: 0
    get-peer-response-example:
      value:
        data:
          - id: 12D327oXYZDcJqxnWqCLSgeQKqNStwFUqHSJXPdSYTJnfxQESzie
            multiAddresses:
              - /dns/abc.com/tcp/15602
            relation: known
            connected: true
            gossipMetrics:
              sentPackets: 0
              droppedSentPackets: 0
              receivedHeartbeats: 0
              sentHeartbeats: 0
              receivedMessages: 0
              newMessages: 0
              knownMessages: 0
    post-peer-request-example:
      value:
        multiAddress: >-
          /dns/abc.com/tcp/15602/p2p/12D327oXYZDcJqxnWqCLSgeQKqNStwFUqHSJXPdSYTJnfxQESzie
        alias: abc.com
    post-peer-response-example:
      value:
        data:
          - id: 12D327oXYZDcJqxnWqCLSgeQKqNStwFUqHSJXPdSYTJnfxQESzie
            multiAddresses:
              - /dns/abc.com/tcp/15602
            relation: known
            connected: true
            gossipMetrics:
              sentPackets: 0
              droppedSentPackets: 0
              receivedHeartbeats: 0
              sentHeartbeats: 0
              receivedMessages: 0
              newMessages: 0
              knownMessages: 0
  schemas:
    Message:
      properties:
        networkId:
          type: string
        parent1MessageId:
          type: string
        parent2MessageId:
          type: string
        payload:
          oneOf:
            - $ref: '#/components/schemas/Indexation'
            - $ref: '#/components/schemas/Milestone'
            - $ref: '#/components/schemas/Transaction'
        nonce:
          type: string
    Indexation:
      properties:
        type:
          type: integer
        index:
          type: string
        data:
          type: string
    Milestone:
      properties:
        type:
          type: integer
        index:
          type: integer
        timestamp:
          type: integer
        parent1MessageId:
          type: string
        parent2MessageId:
          type: string
        inclusionMerkleProof:
          type: string
        publicKeys:
          type: array
          items:
            type: string
        signature:
          type: array
          items:
            type: string
    UTXOInput:
      properties:
        type:
          type: integer
        transactionId:
          type: string
        transactionOutputIndex:
          type: integer
    TransactionEssence:
      properties:
        type:
          type: integer
        inputs:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/UTXOInput'
        outputs:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/SigLockedSingleOutput'
        payload:
          oneOf:
            - $ref: '#/components/schemas/Indexation'
          nullable: true
    Transaction:
      properties:
        type:
          type: integer
        essence:
          type: object
          oneOf:
            - $ref: '#/components/schemas/TransactionEssence'
        unlockBlocks:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/SignatureUnlockBlock'
              - $ref: '#/components/schemas/ReferenceUnlockBlock'
    SignatureUnlockBlock:
      properties:
        type:
          type: integer
        signature:
          type: object
          oneOf:
            - $ref: '#/components/schemas/Ed25519Signature'
    ReferenceUnlockBlock:
      properties:
        type:
          type: integer
        reference:
          type: integer
    Ed25519Address:
      properties:
        type:
          type: integer
        address:
          type: string
    Ed25519Signature:
      properties:
        type:
          type: integer
        publicKey:
          type: string
        address:
          type: string
    SigLockedSingleOutput:
      properties:
        type:
          type: integer
        address:
          anyOf:
            - $ref: '#/components/schemas/Ed25519Address'
        amount:
          type: integer
    Peer:
      properties:
        id:
          type: string
        multiAddresses:
          type: array
          items:
            type: string
        relation:
          type: integer
        connected:
          type: boolean
        gossipMetrics:
          properties:
            sentPackets:
              type: integer
            droppedSentPackets:
              type: integer
            receivedHeartbeats:
              type: integer
            sentHeartbeats:
              type: integer
            receivedMessages:
              type: integer
            newMessages:
              type: integer
            knownMessages:
              type: integer
    ErrorResponse:
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
    ServiceUnavailableErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
      example:
        error:
          code: 503
          message: service unavailable
    BadRequestErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
      example:
        error:
          code: 400
          message: invalid data provided
    NotFoundErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
      example:
        error:
          code: 404
          message: could not find data
    GetInfoResponse:
      properties:
        data:
          type: object
          properties:
            name:
              type: string
            version:
              type: string
            isHealthy:
              type: boolean
            networkId:
              type: string
            latestMilestoneIndex:
              type: integer
            solidMilestoneIndex:
              type: integer
            pruningIndex:
              type: integer
            features:
              type: array
              items:
                type: string
            minPowScore:
              type: number
    GetTipsResponse:
      properties:
        data:
          type: object
          properties:
            tip1:
              type: string
            tip2:
              type: string
    PostMessagesRequest:
      allOf:
        - $ref: '#/components/schemas/Message'
        - type: object
          required:
            - payload
    PostMessagesResponse:
      properties:
        data:
          type: object
          properties:
            messageId:
              type: string
    GetMessagesByIndexResponse:
      properties:
        data:
          type: object
          properties:
            index:
              type: string
            maxResults:
              type: integer
            count:
              type: integer
            messageIds:
              type: array
              items:
                type: string
    GetMessageMetadataByIdResponse:
      properties:
        data:
          type: object
          properties:
            messageId:
              type: string
            parent1MessageId:
              type: string
            parent2MessageId:
              type: string
            isSolid:
              type: boolean
            referencedByMilestoneIndex:
              type: integer
              nullable: true
            ledgerInclusionState:
              enum:
                - included
                - conflicting
            shouldPromote:
              type: boolean
            shouldReattach:
              type: boolean
          required:
            - messageId
            - parent1MessageId
            - parent2MessageId
            - isSolid
    GetMessageByIdDataResponse:
      properties:
        data:
          type: object
          properties:
            allOf:
              $ref: '#/components/schemas/Message'
    GetMessageChildrenResponse:
      properties:
        data:
          type: object
          properties:
            messageId:
              type: string
            maxResults:
              type: integer
            count:
              type: integer
            childrenMessageIds:
              type: array
              items:
                type: string
    GetOutputsByIdResponse:
      properties:
        data:
          type: object
          properties:
            messageId:
              type: string
            transactionId:
              type: string
            outputIndex:
              type: integer
            isSpent:
              type: boolean
            output:
              anyOf:
                - $ref: '#/components/schemas/SigLockedSingleOutput'
    GetAddressBalanceResponse:
      properties:
        data:
          type: object
          properties:
            address:
              type: string
            maxResults:
              type: integer
            count:
              type: integer
            balance:
              type: integer
    GetAddressOutputsResponse:
      properties:
        data:
          type: object
          properties:
            address:
              type: string
            maxResults:
              type: integer
            count:
              type: integer
            outputIDs:
              type: array
              items:
                type: string
    GetMilestoneByIndexResponse:
      properties:
        data:
          type: object
          properties:
            milestoneIndex:
              type: integer
            messageId:
              type: string
            timestamp:
              type: integer
    GetPeersResponse:
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Peer'
    GetPeerResponse:
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/Peer'
    PostPeerRequest:
      properties:
        multiAddress:
          type: string
        alias:
          type: string
      required:
        - multiAddress
        - alias
    PostPeerResponse:
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/Peer'
